Option ExplicitnnPublic Sub btnReadMarketData_Click()nn    '전역변수 설정n    Call SET_GLOBALn    n    If POPUP_WARNING_ENABLE = True Thenn        If GREEKS_ENABLE = True Thenn            If MsgBox("Greeks 계산 옵션이 선택되어 있습니다. 기준가 산출을 하려면 <AC Pricer>의 계산 옵션을 모두 해제해야 합니다. 계속하겠습니까?", vbYesNo) = vbYes Thenn                MsgBox ("Discount Rate를 IRS Curve로 설정합니다.")n            Elsen                Exit Subn            End Ifn        Elsen            If MsgBox("기준가를 산출합니다. Greeks를 계산하려면 <AC Pricer>의 계산 옵션을 설정해야 합니다. 계속하겠습니까?", vbYesNo) = vbYes Thenn                MsgBox ("Discount Rate는 신영증권 신용등급 Curve로 설정합니다.")n            Elsen                Exit Subn            End Ifn        End Ifn    End Ifn    n    Dim scenario_id As Stringn    If SCENARIO_ENABLE = False Thenn        scenario_id = "0"n    Elsen        scenario_id = Range("SCENARIO_ID").valuen    End Ifn            n    Dim adoCon As New adoDB.Connectionn    Call connectDB(adoCon, TNS_SERVICE_NAME, USER_ID, PASSWORD)n    n    Dim market_date As Daten    market_date = shtMarket.Range("market_date").valuenn    Dim market_prevdate As Daten    market_prevdate = shtMarket.Range("market_prevdate").valuenn    Dim market_source As Stringn    market_source = shtMarket.Range("market_source").valuen    n    'USD/KRWn    Range("USDKRW").Cells(1, 1) = get_fx("KRW", "USD", market_date, adoCon)n    Range("USDKRW").Cells(2, 1) = get_fx("KRW", "USD", market_prevdate, adoCon)n    n    Dim the_range As Rangenn    With Applicationn        .ScreenUpdating = Falsen        .StatusBar = Falsen        .DisplayStatusBar = Truen        .Calculation = xlCalculationManualn        .EnableEvents = Falsen    End Withnn    Dim i_ua As Integern    Dim ua_code As Stringnn    For i_ua = 1 To NUM_UAn        n        ua_code = get_ua_code(i_ua)n        Set the_range = shtMarket.Range(ua_code)n        Application.StatusBar = "Importing market data... " & ua_coden        Call fill_ua_data(the_range, ua_code, market_date, market_source, scenario_id, adoCon)n        Call fill_ua_data(the_range.Offset(0, 5), ua_code, market_prevdate, market_source, scenario_id, adoCon)n    n    Next i_uan    n    'Correlationn    Application.StatusBar = "Importing historical correlation data..."n    Set the_range = shtMarket.Range("correlation_table")n    Call fill_corr_matrix(the_range, False, market_date, market_source, scenario_id, adoCon)n    Call fill_corr_matrix(the_range.Offset(the_range.Rows.count + 3, 0), False, market_prevdate, market_source, scenario_id, adoCon)nn    'Minimum Correlation 2019.3.27n    Application.StatusBar = "Importing minimum correlation data..."n    Set the_range = shtMarket.Range("min_correlation_table")n    Call fill_corr_matrix(the_range, True, market_date, market_source, scenario_id, adoCon)n    Call fill_corr_matrix(the_range.Offset(the_range.Rows.count + 3, 0), True, market_prevdate, market_source, scenario_id, adoCon)nn    'Discount Curven    '금리시나리오는 DV01 계산 중 반영되므로 시나리오를 적용하지 않음n    Dim i_dcf As Integern    Dim dcf_ccy As Stringnn    For i_dcf = 1 To NUM_DCFnn        dcf_ccy = get_dcf_ccy(i_dcf)n        Application.StatusBar = "Importing discount curves..." & dcf_ccyn        Set the_range = shtMarket.Range("DCF_" & dcf_ccy)n        Call fill_dcf_data(the_range, dcf_ccy, market_date, market_source, scenario_id, adoCon)n        Call fill_dcf_data(the_range.Offset(0, 5), dcf_ccy, market_prevdate, market_source, scenario_id, adoCon)nn    Next i_dcfnn    With Applicationn        .ScreenUpdating = Truen        .StatusBar = Falsen        .DisplayStatusBar = Truen        .Calculation = xlCalculationAutomaticn        .EnableEvents = Truen    End Withn    n    Call disconnectDB(adoCon)n    n    Set adoCon = Nothingn    Set the_range = Nothingn    nEnd SubnnPrivate Sub fill_dcf_data(the_range As Range, dcf_ccy As String, tdate As Date, source As String, scenario_id As String, adoDB As adoDB.Connection)nn    Dim tdate_str As Stringn    tdate_str = date2str(tdate)n    n    Dim rate_id As Stringn    Dim dcf_date As Daten    Dim dcf_curve_name As Stringn    Dim dcf_curve As Variantn    n    Range(the_range.Cells(8, 1), the_range.Cells(22, 4)).ClearContentsn    dcf_curve = Range(the_range.Cells(8, 1), the_range.Cells(22, 4)).valuen    n    'Discount Rate Curven    '/<----- 델타 계산시 swap curve 사용 2019.4.5n    If GREEKS_ENABLE = True Thenn            n        'Select Case get_ccy_idx(dcf_ccy)n        'Case CCY.USDn        n            '/--- tmp --- 2021.1.4 USD swap curve 불안정 -> 신용등급 BBB+ 커브사용 -> 제거 2024.01.30n            'rate_id = DCF_USD_RATEIDn            n            'Call get_dcf_curve(rate_id, dcf_ccy, tdate_str, source, scenario_id, dcf_date, dcf_curve_name, dcf_curve, adoDB)n            n        'Case CCY.KRW '---/n        n            rate_id = "IRS"n            dcf_curve_name = "IRS"n            dcf_date = tdaten            n            Call get_rf_curve(dcf_ccy, get_rf_num_term(dcf_ccy), tdate_str, source, scenario_id, dcf_curve, adoDB)n        'End Selectnn    Else '----->/n    n        Select Case get_ccy_idx(dcf_ccy)n        Case ccy.USD: rate_id = DCF_USD_RATEIDn        Case ccy.KRW: rate_id = DCF_KRW_RATEIDn        End Selectn    n        Call get_dcf_curve(rate_id, dcf_ccy, tdate_str, source, scenario_id, dcf_date, dcf_curve_name, dcf_curve, adoDB)nn    End Ifn    n    the_range.Cells(1, 3) = tdaten    the_range.Cells(3, 3) = rate_idn    the_range.Cells(4, 3) = dcf_curve_namen    the_range.Cells(5, 3) = dcf_daten    Range(the_range.Cells(8, 1), the_range.Cells(22, 4)).value = dcf_curven        nEnd SubnnPrivate Sub fill_ua_data(the_range As Range, ua_code As String, tdate As Date, source As String, scenario_id As String, adoCon As adoDB.Connection)nn    the_range.Cells(1, 3).ClearContentsn    the_range.Cells(3, 3).ClearContentsn    the_range.Cells(4, 3).ClearContents 'Spot Pricen    the_range.Cells(5, 3).ClearContentsn    Range(the_range.Cells(8, 1), the_range.Cells(22, 4)).ClearContents 'Riskfree Rate Curven    the_range.Cells(24, 3).ClearContents 'Lambda Neutral 2019.3.27n    the_range.Cells(27, 3).ClearContents '3m ATM Implied Volatilityn    the_range.Cells(32, 3).ClearContents '평균 Dividend Yieldn    the_range.Cells(33, 3).ClearContents '1년 Dividend Yieldn    the_range.Cells(34, 3).ClearContents '1~2년 Dividend Yieldn    the_range.Cells(35, 3).ClearContents '2~3년 Dividend Yieldn    the_range.Cells(36, 3).ClearContents 'Ex-dividend Dates 수n    Range(the_range.Cells(38, 2), the_range.Cells(37 + NUM_DIV_DATES, 3)).ClearContents 'Dividend Schedulen    n    Dim i_dcf As Integern    For i_dcf = 1 To NUM_DCFn        the_range.Cells(24 + i_dcf, 3).ClearContents ' FX Vol,n        the_range.Cells(27 + i_dcf, 3).ClearContents 'Quanto Correlationn        the_range.Cells(29 + i_dcf, 3).ClearContents 'Quanto Dividendn    Next i_dcfn        n    If is_active_ua(ua_code) = True Thenn    n        Dim tdate_str As Stringn        tdate_str = date2str(tdate)n        n        Dim ua_ccy As Stringn        ua_ccy = get_ua_currency(ua_code)n        n        the_range.Cells(1, 3) = tdaten        the_range.Cells(3, 3) = ua_coden        the_range.Cells(5, 3) = ua_ccyn        n        'Spot Pricen        the_range.Cells(4, 3) = get_spot_price(ua_code, tdate_str, scenario_id, adoCon)n    n        'Riskfree Rate Curven        Dim rf_curve As Variantn        rf_curve = Range(the_range.Cells(8, 1), the_range.Cells(22, 4)).valuen        Call get_rf_curve(ua_ccy, get_rf_num_term(ua_ccy), tdate_str, source, scenario_id, rf_curve, adoCon)n        Range(the_range.Cells(8, 1), the_range.Cells(22, 4)).value = rf_curven        n        'Lambda Neutral 2019.3.27n        the_range.Cells(24, 3) = get_lambda_neutral(ua_code, tdate_str, source, scenario_id, adoCon)n        n        '3m ATM Implied Volatilityn        the_range.Cells(27, 3) = get_vol_on_surface(tdate_str, ua_code, the_range.Cells(4, 3).value, 0.25, 1, "Implied", "FRONT", adoCon)n        n        'Dividend Yieldn        the_range.Cells(32, 3) = get_div_yield(ua_code, tdate_str, source, scenario_id, adoCon)n        n        'Dividend Schedulen        Dim div_schedule As Variantn        div_schedule = Range(the_range.Cells(38, 2), the_range.Cells(37 + NUM_DIV_DATES, 3)).valuen        Call get_div_schedule(ua_code, tdate_str, source, scenario_id, div_schedule, adoCon)n        Range(the_range.Cells(38, 2), the_range.Cells(37 + NUM_DIV_DATES, 3)).value = div_schedulen        n        '1년 단위 ex-dividend dates 범위n        Dim num_ex_div_dates_1y As Integern        Dim num_ex_div_dates_2y As Integern        Dim num_ex_div_dates_3y As Integern        num_ex_div_dates_1y = WorksheetFunction.CountIf(Range(the_range.Cells(38, 2), the_range.Cells(37 + NUM_DIV_DATES, 2)), "<=" & WorksheetFunction.EDate(tdate, 12))n        num_ex_div_dates_2y = WorksheetFunction.CountIf(Range(the_range.Cells(38, 2), the_range.Cells(37 + NUM_DIV_DATES, 2)), "<=" & WorksheetFunction.EDate(tdate, 24))n        num_ex_div_dates_3y = WorksheetFunction.CountIf(Range(the_range.Cells(38, 2), the_range.Cells(37 + NUM_DIV_DATES, 2)), "<=" & WorksheetFunction.EDate(tdate, 36))n        n        '1년 단위 dividend yieldn        the_range.Cells(33, 3).Formula = "=SUM(" & the_range.Cells(38, 3).Address() & ":" & the_range.Cells(37 + num_ex_div_dates_1y, 3).Address() & ")/" & the_range.Cells(4, 3).Address()n        the_range.Cells(34, 3).Formula = "=SUM(" & the_range.Cells(37 + num_ex_div_dates_1y + 1, 3).Address() & ":" & the_range.Cells(37 + num_ex_div_dates_2y, 3).Address() & ")/" & the_range.Cells(4, 3).Address()n        the_range.Cells(35, 3).Formula = "=SUM(" & the_range.Cells(37 + num_ex_div_dates_2y + 1, 3).Address() & ":" & the_range.Cells(37 + num_ex_div_dates_3y, 3).Address() & ")/" & the_range.Cells(4, 3).Address()n        the_range.Cells(36, 3).Formula = "=COUNT(" & the_range.Cells(38, 2).Address() & ":" & the_range.Cells(37 + NUM_DIV_DATES, 2).Address() & ")"n        n        'Quanton        Dim dcf_ccy As Stringn        Dim quanto_pair_code(1) As Stringn        quanto_pair_code(0) = ua_coden        n        For i_dcf = 1 To NUM_DCFn        n            dcf_ccy = get_dcf_ccy(i_dcf)n            quanto_pair_code(1) = ua_ccy & dcf_ccyn            n            'FX Vol, Quanto Correlationn            If get_ccy_idx(ua_ccy) = get_ccy_idx(dcf_ccy) Thenn                the_range.Cells(24 + i_dcf, 3) = 0n                the_range.Cells(27 + i_dcf, 3) = 0n            Elsen                the_range.Cells(24 + i_dcf, 3) = get_fx_vol(ua_ccy, dcf_ccy, tdate_str, source, scenario_id, adoCon)n                the_range.Cells(27 + i_dcf, 3) = get_corr(quanto_pair_code, False, tdate_str, source, scenario_id, adoCon)n            End Ifn            n            'Quanto Dividendn            the_range.Cells(29 + i_dcf, 3).Formula = "=" & the_range.Cells(27, 3).Address() & "*" & the_range.Cells(27 + i_dcf, 3).Address() & "*" & the_range.Cells(24 + i_dcf, 3).Address()n            n        Next i_dcfn        n        With Range(the_range.Cells(1, 1), the_range.Cells(1, 5)).Interiorn            .Pattern = xlSolidn            .PatternColorIndex = xlAutomaticn            .ThemeColor = xlThemeColorLight1n            .TintAndShade = 0n            .PatternTintAndShade = 0n        End Withn        n    Elsen    n        the_range.Cells(1, 3) = "미사용"n     n        With Range(the_range.Cells(1, 1), the_range.Cells(1, 5)).Interiorn            .Pattern = xlSolidn            .PatternColorIndex = xlAutomaticn            .ThemeColor = xlThemeColorDark1n            .TintAndShade = -0.499984740745262n            .PatternTintAndShade = 0n        End Withn    End Ifn    nEnd SubnnPrivate Sub fill_corr_matrix(corr_matrix As Range, isLocMinCorr As Boolean, tdate As Date, source As String, scenario_id As String, oDB As adoDB.Connection)n'local correlation 추가 2019.3.27nn    Dim tdate_str As Stringn    tdate_str = date2str(tdate)n            n    corr_matrix.ClearContentsn    corr_matrix.Cells(0, 0).value = tdaten    n    Dim no_of_asset As Integern    no_of_asset = corr_matrix.Columns.countn    n    Dim corr As Variantn    corr = corr_matrix.valuen    n    Dim corr_pool As Variantn    corr_pool = Range(corr_matrix.Cells(1, 0), corr_matrix.Cells(no_of_asset, 0)).valuen    n    Dim pair_code(1) As Stringn    n    Dim i, j As Integern    Dim target_point As Booleann    target_point = Falsen    n    For i = 1 To no_of_assetn    n        pair_code(0) = corr_pool(i, 1)n       n        For j = 1 To no_of_assetn        n            pair_code(1) = corr_pool(j, 1)n            n            If is_active_ua(pair_code(0)) = True Thenn                If is_active_ua(pair_code(1)) = True Thenn                    target_point = Truen                Elsen                    If get_ccy_idx(get_ua_currency(pair_code(0))) = get_ccy_idx(Left(pair_code(1), 3)) And is_active_ccy(Left(pair_code(1), 3)) = True Thenn                        target_point = Truen                    Elsen                        target_point = Falsen                    End Ifn                End Ifn            Elsen                If is_active_ua(pair_code(1)) = True Thenn                    If get_ccy_idx(get_ua_currency(pair_code(1))) = get_ccy_idx(Left(pair_code(0), 3)) And is_active_ccy(Left(pair_code(0), 3)) = True Thenn                        target_point = Truen                    Elsen                        target_point = Falsen                    End Ifn                Elsen                    target_point = Falsen                End Ifn            End Ifn            n            If target_point = True Thenn            n                If i = j Thenn                    corr(i, j) = 1n                ElseIf i > j Thenn                    corr(i, j) = corr(j, i)n                Elsen                    corr(i, j) = get_corr(pair_code, isLocMinCorr, tdate_str, source, scenario_id, oDB)n                End Ifnn            End Ifn        n        Next jn    n    Next in    n    corr_matrix.value = corrn    n    Set corr = Nothingn    Set corr_pool = Nothingn    nEnd Sub