Option ExplicitnnPublic Function connectDB(ByRef objADODB As adoDB.Connection, service_name As String, user_name As String, PASSWORD As String) As Booleannn    Dim strConnection As Stringn    strConnection = "Provider=" & PROVIDER & ";Data Source=" & service_name & ";User ID=" & user_name & ";Password=" & PASSWORD & ";Persist Security Info=True"n    n    objADODB.Open (strConnection)n    n    If objADODB.State <> adStateOpen Thenn        connectDB = Falsen        Exit Functionn    End Ifn    n    connectDB = TruennEnd FunctionnnPublic Function disconnectDB(ByRef objADODB As adoDB.Connection) As Booleannn    objADODB.Closen    n    If objADODB.State <> adStateClosed Thenn        disconnectDB = Falsen        Exit Functionn    End Ifn    n    disconnectDB = TruennEnd FunctionnnPublic Function getSQL(sql_filepath As String, bind_variable() As String, bind_value() As Variant) As Stringn'sql_filepath에 있는 sql 파일을 읽어, bind_variable을 bind_value binding 한 sql string 생성nn    Dim sql As Stringn    Dim fileline As Stringn    Dim comment_start As Variantn    Dim quotation_start As Variantn    Dim quotation_end As Variantn    Dim quotation As Stringn    Dim i As Integern        n    Open sql_filepath For Input As #1n    n    Do While Not EOF(1)n    n        Line Input #1, filelinen        n        '주석 제거n        comment_start = InStr(1, fileline, "--", vbTextCompare)n        If comment_start > 0 Thenn            fileline = Left(fileline, comment_start - 1)n        End Ifn        n        '따옴표 제거n        quotation_start = InStr(1, fileline, """", vbTextCompare)n        quotation_end = InStr(quotation_start + 1, fileline, """", vbTextCompare)n        n        If quotation_start > 0 Thenn            quotation = Mid(fileline, quotation_start, quotation_end - quotation_start + 1)n            fileline = Replace(fileline, quotation, "", , , vbTextCompare)n        Elsen            quotation = ""n        End Ifn        n        'bind variable 처리n        For i = 1 To UBound(bind_variable)n            Select Case VarType(bind_value(i))n            Case vbStringn                fileline = Replace(fileline, bind_variable(i), "'" & CStr(bind_value(i)) & "'", , , vbTextCompare)n            Case vbDoublen                fileline = Replace(fileline, bind_variable(i), CStr(bind_value(i)), , , vbTextCompare)n            Case vbNull, vbEmptyn                fileline = Replace(fileline, bind_variable(i), "Null", , , vbTextCompare)n            End Selectn        Next in        n        sql = sql & Chr(32) & filelinen    n    Loopn    n    Close #1n    n    getSQL = sqlnnEnd Function