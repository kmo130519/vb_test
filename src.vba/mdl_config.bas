Option ExplicitnnPublic realtime_running_3d As BooleannnnPublic Sub display_time_checker()n    n    Dim inx As Integern    Dim array_size As Integern    n    array_size = time_checker.get_array_countn    n    shtConfig.Range("time_check_start").Range("A2:C1000").ClearContentsn    n    For inx = 1 To array_sizen    n        shtConfig.Range("time_check_start").Cells(inx + 1, 1).value = time_checker.stop_point_name()(inx)n        shtConfig.Range("time_check_start").Cells(inx + 1, 2).value = time_checker.tick_counter()(inx)n        n        If inx > 1 Thenn            shtConfig.Range("time_check_start").Cells(inx + 1, 3).value = time_checker.tick_counter()(inx) - time_checker.tick_counter()(inx - 1)n        End Ifn        n    Next inxn        n    time_checker.initailizennEnd SubnnnPublic Sub real_time_on()nn'    shtMarket.Cells.Replace "SP_RTD(", "=SP_RTD(", xlPart, xlByRows, False, False, False, Falsen'    shtMarketForeign.Cells.Replace "SP_RTD(", "=SP_RTD(", xlPart, xlByRows, False, False, False, FalsenEnd SubnnPublic Sub real_time_off()nn'    shtMarket.Cells.Replace "=SP_RTD(", "SP_RTD(", xlPart, xlByRows, False, False, False, Falsen'    shtMarketForeign.Cells.Replace "=SP_RTD(", "SP_RTD(", xlPart, xlByRows, False, False, False, Falsen    nEnd SubnnnPublic Sub cmd_init()nnnOn Error GoTo ErrorHandlernntime_checker.add_tick_counter "START"nn    shtIndexPosition.Range("tglRealTime").value = Falsen    shtIndexPosition.Range("tglTimer").value = Falsen    shtIndexPosition.Range("tglEndofDay").value = Falsen    shtIndexPosition.Range("tglExcludeIntraday").value = Falsen    n    shtConfig.Range("tglRetrieveDb").value = Truen    shtConfig.Range("tglNeglectCurrentDateVol").value = Truen        n    n    real_time_offn    ntime_checker.add_tick_counter "Button Toggle Completed"nn    initialize_global_variablesn    ntime_checker.add_tick_counter "Init g variable Completed"n    '------------------------------------------------------------------------------------n    ' Reset current date to today and retrieve next date and last date from "DATE_INF"n    '------------------------------------------------------------------------------------n    reset_closing_daten    reset_confign    ntime_checker.add_tick_counter "Date setting Completed"nn    load_market True, True ', config__.current_date_n    ntime_checker.add_tick_counter "Load market Completed"nn    display_config_daten    nnn    initialized__ = Truen    n    Application.Calculation = xlCalculationManualn        n    initialize_holiday_listn    ntime_checker.add_tick_counter "Initialize_holiday_list Completed"n    n    reset_search_conditionn    n    cmd_retrieve_deal_listn    ntime_checker.add_tick_counter "cmd_retrieve_deal_list Completed"n    n    cmd_retrieve_ac_deal_listn    ntime_checker.add_tick_counter "cmd_retrieve_ac_deal_list Completed"nn    cmd_retrieve_vanillan    ntime_checker.add_tick_counter "cmd_retrieve_vanilla Completed"n    n    cmd_retrieve_futuresn    ntime_checker.add_tick_counter "cmd_retrieve_futures Completed"n    n    Application.Calculation = xlCalculationAutomaticn    ntime_checker.add_tick_counter "Cell Calculation Completed"nn    n    cmd_TimerOffn    shtACList.Range("tgl_3d").value = Falsen    realtime_running_3d = Falsen    ntime_checker.add_tick_counter "cmd_TimerOff Completed"nndisplay_time_checkernn    Exit Subn    nErrorHandler:n    initialized__ = Falsen    raise_err "cmd_init"n    nEnd SubnnPublic Function read_term_vega_tenor() As Date()nn    Dim rtn_array() As Daten    Dim inx As Integern    n    inx = 1n    n    While shtConfig.Range("term_vega_tenor").Cells(inx, 1) <> ""n        n        push_back_date rtn_array, shtConfig.Range("date_config").Cells(1, 1).value + shtConfig.Range("term_vega_tenor").Cells(inx, 1)n        inx = inx + 1n        n    Wendn    n    n    read_term_vega_tenor = rtn_arraynnEnd FunctionnnPublic Sub cmd_reset_config()nnOn Error GoTo ErrorHandlernnn    If shtConfig.Range("tglClearGloablVar") Thennn        initialize_global_variablesn    n    End Ifn    n    reset_confign    n    display_config_daten    n    initialize_holiday_listn    n    cmd_TimerOffn    n    initialized__ = Truen    n    Exit Subn    nErrorHandler:nn    initialized__ = Falsen    raise_err "cmd_reset_config"nnEnd SubnnPublic Sub cmd_morning_closing()nnOn Error GoTo ErrorHandlern                                n    run_morning_closingn    n    MsgBox "Closing completed." & Chr(13) & output_stringn    n    Exit Subn    nErrorHandler:nn    raise_err "cmd_morning_closing", Err.description & output_stringn    nnEnd Subn'n'Public Sub cmd_closing()n'n'On Error GoTo ErrorHandlern'n'    run_closingn'n'    MsgBox "Closing completed." & Chr(13) & output_stringn'n'    Exit Subn'n'ErrorHandler:n'n'    raise_err "cmd_closing", Err.description & output_stringn'n'n'End SubnnPublic Sub cmd_market_closing()nnOn Error GoTo ErrorHandlern                                n    closing_greek_ac_marketn    n    MsgBox "Closing completed." & Chr(13) & output_stringn    n    Exit Subn    nErrorHandler:nn    raise_err "cmd_market_closing", Err.description & output_stringn    nnEnd SubnnnPublic Sub reset_closing_date(Optional closing_date As Date = -1)n    nnOn Error GoTo ErrorHandlern                                n                                n    If closing_date <= 0 Thenn        closing_date = Daten    End Ifn    n    shtConfig.Range("date_config").Cells(1, 1).value = closing_datenn    Exit Subn    nErrorHandler:nn    raise_err "reset_closing_date"nnnEnd SubnnPublic Sub reset_search_condition(Optional LIVE_YN As String = "Y", Optional CONFIRM_YN As String = "Y")nnOn Error GoTo ErrorHandlern    n    shtCliquetList.Range("search_condition").Cells(2, 1).value = LIVE_YNn    shtCliquetList.Range("search_condition").Cells(2, 2).value = CONFIRM_YNn    n    shtACList.Range("search_condition").Cells(2, 1).value = LIVE_YNn    shtACList.Range("search_condition").Cells(2, 2).value = CONFIRM_YNnn    Exit Subn    nErrorHandler:nn    raise_err "reset_search_condition"nnEnd SubnnnPublic Sub display_config_date()nnnOn Error GoTo ErrorHandlern                                      n    shtConfig.Range("date_config").Cells(1, 1).value = config__.current_date_n    shtConfig.Range("date_config").Cells(2, 1).value = config__.next_date_n    shtConfig.Range("date_config").Cells(3, 1).value = config__.last_date_n    shtConfig.Range("date_config").Cells(4, 1).value = config__.date_before_yesterday_n    shtConfig.Range("date_config").Cells(5, 1).value = config__.date_week_ago_n    shtConfig.Range("date_config").Cells(6, 1).value = config__.date_month_ago_n    shtConfig.Range("date_config").Cells(7, 1).value = config__.date_3_month_ago_n    shtConfig.Range("date_config").Cells(8, 1).value = config__.date_6_month_ago_nn    Exit Subn    nErrorHandler:nn    Err.Raise vbObjectError + 10000, "refresh_config : " & Chr(13) & Err.source, Err.descriptionn    nnEnd Subnn