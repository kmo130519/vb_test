Option Explicitnn'------------------------------------------------------n'Code:n' S : underlying price direction.n' VOL: volatility directionn'------------------------------------------------------nnPrivate spot_grid_() As DoublenPrivate vol_grid_() As DoublenPrivate greek_value_() As clsGreeks ' 2 Dimension arraynnPublic Sub set_greek_value(inx As Integer, jnx As Integer, greek As clsGreeks)n    n    Set greek_value_(inx, jnx) = greeknnnEnd SubnnPublic Function greek_value(inx As Integer, jnx As Integer) As clsGreeksnn    nn    Set greek_value = greek_value_(inx, jnx)nnnEnd FunctionnnPublic Function spot_grid(inx As Integer) As DoublennOn Error GoTo ErrorHandlernn    If inx >= 1 And inx <= get_number_of_grid("S") Thennn        spot_grid = spot_grid_(inx)n    n    Elsen    n        raise_err "spot_grid", "out of bound array"n        n    End Ifn    n    Exit Functionn    nErrorHandler:nn    raise_err "clsSpotVolGrid.spot_grid"n    nnEnd FunctionnnPublic Function vol_grid(inx As Integer) As DoublennOn Error GoTo ErrorHandlernnn    If inx >= 1 And inx <= get_number_of_grid("VOL") Thenn    n        vol_grid = vol_grid_(inx)n    n    Elsen    n        raise_err "spot_grid", "out of bound array"n        n    End Ifn    n    Exit Functionn    nErrorHandler:nn    raise_err "clsSpotVolGrid.vol_grid"n        nnEnd Functionnn'---------------------------------n' Redim grid arraysn' if the number of grids the user set is even number,n' the number of grid will be the nearest odd numbern'---------------------------------nPublic Sub initialize(no_of_grid_s As Integer, no_of_grid_vol As Integer, interval_s As Double, interval_vol As Double)nn    Dim no_of_grid_s_mod As Integern    Dim no_of_grid_vol_mod As Integern    n    Dim inx As Integern    nOn Error GoTo ErrorHandlernn    no_of_grid_s_mod = Int((no_of_grid_s - 1) / 2) * 2 + 1 ' Make it to be odd number.n    no_of_grid_vol_mod = Int((no_of_grid_vol - 1) / 2) * 2 + 1 ' Make it to be odd number.nn    ReDim spot_grid_(1 To no_of_grid_s_mod) As Doublen    ReDim vol_grid_(1 To no_of_grid_vol_mod) As Doublen    n    ReDim greek_value_(1 To no_of_grid_s_mod, 1 To no_of_grid_vol_mod) As clsGreeksn    n    For inx = 1 To no_of_grid_s_modn        n        spot_grid_(inx) = interval_s * (inx - get_center_grid_index("S"))n    n    Next inxn    n    For inx = 1 To no_of_grid_vol_modn        n        vol_grid_(inx) = interval_vol * (inx - get_center_grid_index("VOL"))n    n    Next inxn    n    n    Exit Subn    nErrorHandler:nn    raise_err "clsSpotVolGrid.initialize"nnEnd Subnn'------------------------n' Returns the index of the center grid.n'------------------------nPublic Function get_center_grid_index(Optional Direction As String = "S") As Integernn    Dim no_of_grid As Integern    Dim center_grid_index As Integern    nOn Error GoTo ErrorHandlernn    no_of_grid = get_number_of_grid(Direction)n    n    center_grid_index = Int(no_of_grid / 2) + 1n    n    n    get_center_grid_index = center_grid_indexn    n    Exit Functionn    nErrorHandler:nn    raise_err "clsSpotVolGrid.get_center_grid_index"n    nnEnd Functionnn'------------------------n' Returns the number of grid according to the directionn'------------------------nPublic Function get_number_of_grid(Optional Direction As String = "S") As Integern    n    Dim no_of_grid As Integern  nOn Error GoTo ErrorHandlernn    If Direction = "S" ThennnOn Error Resume Nextn        no_of_grid = UBound(spot_grid_)n        n        If Err.number = 9 Thenn            n            no_of_grid = 0n        n        End Ifn        nOn Error GoTo ErrorHandlern        n    ElseIf Direction = "VOL" Thenn    n        no_of_grid = UBound(vol_grid_)n        nOn Error Resume Nextn        n        If Err.number = 9 Thenn            n            no_of_grid = 0n        n        End Ifn        nOn Error GoTo ErrorHandlernn    Elsen    n        raise_err "get_number_of_grid", "Invalid direction of grid"n    n    End Ifn    n    n    get_number_of_grid = no_of_gridn        n    Exit Functionn    nErrorHandler:nn    raise_err "clsSpotVolGrid.get_number_of_grid"nnnnEnd Functionnnn