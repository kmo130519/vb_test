Option Explicitnn'Each function returns price, delta, gamma, crossgamma, theta, dDeltadt, dGammadt,dgammadspot from node point-ykjeonnnPublic Function ReturnPrice( _nByRef currentprice() As Double, _nByRef initialprice() As Double, _nByRef nodeprice() As Double, _nByRef px() As Double, _nByRef dx() As Double, _nByRef nmin() As Long, _nByRef nmax() As Long) As DoublennDim i As LongnDim Point() As DoublenDim nodecls As New NodeControlnn    ReDim Point(1 To UBound(currentprice(), 1) - LBound(currentprice(), 1) + 1) As Doublen    n    For i = LBound(currentprice(), 1) To UBound(currentprice(), 1)n    n        Point(i - LBound(currentprice(), 1) + 1) = currentprice(i) / initialprice(i)n    n    Next inn    ReturnPrice = nodecls.ReturnValue(Point(), nodeprice(), px(), dx(), nmin(), nmax())n    n    Set nodecls = Nothingn    Erase PointnnEnd FunctionnnPublic Function ReturnDelta( _nByRef currentprice() As Double, _nByRef initialprice() As Double, _nByRef nodeprice() As Double, _nByRef px() As Double, _nByRef dx() As Double, _nByRef nmin() As Long, _nByRef nmax() As Long, _nByVal Axis As Long, _nOptional ByVal Direction As Long = 0, _nOptional ByVal NodeStep As Long = 1) As DoublennDim i As LongnDim Point() As DoublenDim nodecls As New NodeControlnn    ReDim Point(1 To UBound(currentprice(), 1) - LBound(currentprice(), 1) + 1) As Doublen    n    For i = LBound(currentprice(), 1) To UBound(currentprice(), 1)n    n        Point(i - LBound(currentprice(), 1) + 1) = currentprice(i) / initialprice(i)n    n    Next inn    ReturnDelta = nodecls.ReturnTangent(Point(), nodeprice(), px(), dx(), nmin(), nmax(), Axis, _n     Direction, NodeStep) / initialprice(Axis)n    n    Set nodecls = Nothingn    Erase Pointn    nEnd FunctionnnPublic Function ReturnGamma( _nByRef currentprice() As Double, _nByRef initialprice() As Double, _nByRef nodeprice() As Double, _nByRef px() As Double, _nByRef dx() As Double, _nByRef nmin() As Long, _nByRef nmax() As Long, _nByVal Axis1 As Long, _nByVal Axis2 As Long, _nOptional ByVal NodeStep As Long = 1) As DoublennDim i As LongnDim Point() As DoublenDim nodecls As New NodeControlnn    If Axis1 = Axis2 Thennn        ReDim Point(1 To UBound(currentprice(), 1) - LBound(currentprice(), 1) + 1) As Doublen        n        For i = LBound(currentprice(), 1) To UBound(currentprice(), 1)n        n            Point(i - LBound(currentprice(), 1) + 1) = currentprice(i) / initialprice(i)n        n        Next in    n        ReturnGamma = nodecls.ReturnConvexity(Point(), nodeprice(), px(), dx(), nmin(), nmax(), Axis1, NodeStep) _n        / (initialprice(Axis1) * initialprice(Axis1))n        n    Elsen    n        ReturnGamma = ReturnCrossGamma(currentprice(), initialprice(), nodeprice(), px(), dx(), nmin(), nmax(), Axis1, Axis2)n    n    End Ifn    n    Set nodecls = Nothingn    Erase PointnnEnd FunctionnnPublic Function ReturnCrossGamma( _nByRef currentprice() As Double, _nByRef initialprice() As Double, _nByRef nodeprice() As Double, _nByRef px() As Double, _nByRef dx() As Double, _nByRef nmin() As Long, _nByRef nmax() As Long, _nByVal Axis1 As Long, _nByVal Axis2 As Long) As DoublennDim i As LongnDim Point() As DoublenDim nodecls As New NodeControlnn    ReDim Point(1 To UBound(currentprice(), 1) - LBound(currentprice(), 1) + 1) As Doublen    n    For i = LBound(currentprice(), 1) To UBound(currentprice(), 1)n    n        Point(i - LBound(currentprice(), 1) + 1) = currentprice(i) / initialprice(i)n    n    Next inn    ReturnCrossGamma = nodecls.ReturnMixedDeriv(Point(), nodeprice(), px(), dx(), nmin(), nmax(), Axis1, Axis2) _n    / (initialprice(Axis1) * initialprice(Axis2))n    n    Set nodecls = Nothingn    Erase PointnnEnd FunctionnnPublic Function ReturnTheta( _nByRef currentprice() As Double, _nByRef initialprice() As Double, _nByRef nodeprice() As Double, _nByRef NextTimePrice() As Double, _nByVal timestep As Double, _nByRef px() As Double, _nByRef dx() As Double, _nByRef nmin() As Long, _nByRef nmax() As Long) As DoublennDim i As LongnDim Point() As DoublenDim nodecls As New NodeControlnn    ReDim Point(1 To UBound(currentprice(), 1) - LBound(currentprice(), 1) + 1) As Doublen    n    For i = LBound(currentprice(), 1) To UBound(currentprice(), 1)n    n        Point(i - LBound(currentprice(), 1) + 1) = currentprice(i) / initialprice(i)n    n    Next inn    ReturnTheta = (nodecls.ReturnValue(Point(), NextTimePrice(), px(), dx(), nmin(), nmax()) - _n    nodecls.ReturnValue(Point(), nodeprice(), px(), dx(), nmin(), nmax())) / timestepn        n    Set nodecls = Nothingn    Erase PointnnEnd FunctionnnPublic Function ReturnDdeltaDt( _nByRef currentprice() As Double, _nByRef initialprice() As Double, _nByRef nodeprice() As Double, _nByRef NextTimePrice() As Double, _nByVal timestep As Double, _nByRef px() As Double, _nByRef dx() As Double, _nByRef nmin() As Long, _nByRef nmax() As Long, _nByVal Axis As Long, _nOptional ByVal Direction As Long = 0, _nOptional ByVal NodeStep As Long = 1) As DoublennDim i As LongnDim Point() As DoublenDim nodecls As New NodeControlnn    ReDim Point(1 To UBound(currentprice(), 1) - LBound(currentprice(), 1) + 1) As Doublen    n    For i = LBound(currentprice(), 1) To UBound(currentprice(), 1)n    n        Point(i - LBound(currentprice(), 1) + 1) = currentprice(i) / initialprice(i)n    n    Next inn    ReturnDdeltaDt = (nodecls.ReturnTangent(Point(), NextTimePrice(), px(), dx(), nmin(), nmax(), Axis, _n     Direction, NodeStep) - nodecls.ReturnTangent(Point(), nodeprice(), px(), dx(), nmin(), nmax(), Axis, _n     Direction, NodeStep)) / (initialprice(Axis) * timestep)n    n    Set nodecls = Nothingn    Erase PointnnEnd FunctionnnPublic Function ReturnDgammaDt( _nByRef currentprice() As Double, _nByRef initialprice() As Double, _nByRef nodeprice() As Double, _nByRef NextTimePrice() As Double, _nByVal timestep As Double, _nByRef px() As Double, _nByRef dx() As Double, _nByRef nmin() As Long, _nByRef nmax() As Long, _nByVal Axis As Long, _nOptional ByVal NodeStep As Long = 1) As DoublennDim i As LongnDim Point() As DoublenDim nodecls As New NodeControlnn    ReDim Point(1 To UBound(currentprice(), 1) - LBound(currentprice(), 1) + 1) As Doublen    n    For i = LBound(currentprice(), 1) To UBound(currentprice(), 1)n    n        Point(i - LBound(currentprice(), 1) + 1) = currentprice(i) / initialprice(i)n    n    Next inn    ReturnDgammaDt = (nodecls.ReturnConvexity(Point(), NextTimePrice(), px(), dx(), nmin(), nmax(), Axis, _n    NodeStep) - nodecls.ReturnConvexity(Point(), nodeprice(), px(), dx(), nmin(), nmax(), Axis, _n    NodeStep)) / (initialprice(Axis) * initialprice(Axis) * timestep)n    n    Set nodecls = Nothingn    Erase PointnnEnd FunctionnnPublic Function ReturnDgammaDspot( _nByRef currentprice() As Double, _nByRef initialprice() As Double, _nByRef nodeprice() As Double, _nByRef px() As Double, _nByRef dx() As Double, _nByRef nmin() As Long, _nByRef nmax() As Long, _nByVal Axis As Long) As DoublennDim i As LongnDim Point() As DoublenDim nodecls As New NodeControlnn    ReDim Point(1 To UBound(currentprice(), 1) - LBound(currentprice(), 1) + 1) As Doublen    n    For i = LBound(currentprice(), 1) To UBound(currentprice(), 1)n    n        Point(i - LBound(currentprice(), 1) + 1) = currentprice(i) / initialprice(i)n    n    Next in    n    ReturnDgammaDspot = nodecls.ReturnThirdMoment(Point(), nodeprice(), px(), dx(), nmin(), nmax(), Axis)n    n    Set nodecls = Nothingn    Erase PointnnEnd Function