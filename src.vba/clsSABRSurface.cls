'===============================================================n' CLASS : clsSABRSurfacen' DESC:n' Modified onn'  2013-10-10n'===============================================================nnOption Explicitnn'-----------------------------------n' KEYn'-----------------------------------nPublic eval_date_ As DatenPublic underlying_asset_ As StringnnPublic real_date As DatennPublic s_ As DoublennnPublic local_vol_surface As clsVolSurfacennnnnPrivate Const h_ As Double = 0.001nnPublic Function copy_obj() As clsSABRSurfacenn    Dim rtn_obj As clsSABRSurfacen    n    Set rtn_obj = New clsSABRSurfacen    n    rtn_obj.eval_date_ = eval_date_n    rtn_obj.underlying_asset_ = underlying_asset_n    rtn_obj.real_date = real_daten    rtn_obj.s_ = s_n    n    Set rtn_obj.local_vol_surface = local_vol_surface.copy_objnn    Set copy_obj = rtn_objn    nEnd FunctionnnPublic Sub set_local_vol_surface_(vol_surface_in As clsVolSurface)nn    Set local_vol_surface = vol_surface_innnEnd SubnnPublic Sub set_local_vol_surface(local_vol_grid As clsPillarGrid, local_vol_data() As Double)nnOn Error GoTo ErrorHandlernn   n    If local_vol_surface Is Nothing Thenn    n        Set local_vol_surface = New clsVolSurfacen        n    End Ifn    n    local_vol_surface.set_vol_surface local_vol_grid, local_vol_datan    nn    nn    Exit Subn    nErrorHandler:nn    raise_err "clsSABRSurface.set_local_vol_surface", Err.descriptionn    nnEnd Subnnnnn'-------------------------------------------n' Gettersn'-------------------------------------------nPublic Function eval_date() As Datenn    eval_date = eval_date_nnnEnd FunctionnnPublic Function underlying_asset() As Stringnn    underlying_asset = underlying_asset_nnnEnd Functionnnnnnn'===============================n' 2015/10/05n' bump local vol up to timen'===============================nnPublic Sub bump_local_vol_upto(ByVal bump_size As Double, ByVal up_to_date As Date)nn    local_vol_surface.bump_vol_upto bump_size, up_to_daten    nnEnd SubnnPublic Sub bump_local_vol_skew_upto(ByVal bump_size As Double, ByVal up_to_date As Date)nn    local_vol_surface.bump_skew_upto bump_size * 2, up_to_date, s_n    nnEnd SubnPublic Sub bump_local_vol_conv_upto(ByVal bump_size As Double, ByVal up_to_date As Date)nn    local_vol_surface.bump_conv_upto bump_size * 2, up_to_date, s_n    nnEnd SubnnnPublic Sub bump_vol_surface(ByVal bump_size As Double)nnn'    vol_surface.bump_vol bump_sizen    local_vol_surface.bump_vol bump_sizen    n    Exit Subn    nErrorHandler:nn    raise_err "clsSABRSurface.bump_vol_surface", Err.descriptionnnEnd SubnnPublic Sub rewind_vol_bump()n    n'    vol_surface.rewind_vol_bumpn    local_vol_surface.rewind_vol_bumpnnEnd SubnnPublic Sub bump_skew(ByVal bump_size As Double)n    n'    vol_surface.bump_skew bump_size, s_n    local_vol_surface.bump_skew bump_size * 2, s_nnEnd SubnnPublic Sub bump_conv(ByVal bump_size As Double)n    n'    vol_surface.bump_conv bump_size, s_n    local_vol_surface.bump_conv bump_size * 2, s_nnEnd Subn'n'Public Function get_skew(maturity_date As Date, Optional s_in As Double = 0, Optional eval_date_in As Date = -1, Optional lower_strike As Double = 0.9, Optional upper_strike As Double = 1.1) As Doublen'n'On Error GoTo ErrorHandlern'n'    Dim rtn_value As Doublen'n'    Dim s As Doublen'    Dim eval_date As Daten'n'    If eval_date_in > 0 Thenn'        eval_date = eval_date_inn'    Elsen'        eval_date = eval_date_n'    End Ifn'n'    If s_in > 0 Thenn'        s = s_inn'    Elsen'        s = s_n'    End Ifn'n'    rtn_value = (implied_vol(eval_date, s * lower_strike, maturity_date) - implied_vol(eval_date, s * upper_strike, maturity_date)) / (lower_strike - upper_strike)n'n'    get_skew = rtn_valuen'n'n'    Exit Functionn'n'ErrorHandler:n'n'    raise_err "clsSABRSurface.get_skew", Err.description & ":" & Me.underlying_asset & ":" & maturity_daten'n'End Functionn'n'Public Function get_smile(maturity_date As Date, Optional s_in As Double = 0, Optional eval_date_in As Date = -1, Optional lower_strike As Double = 0.9, Optional mid_strike As Double = 1#, Optional upper_strike As Double = 1.1) As Doublen'n'On Error GoTo ErrorHandlern'n'    Dim rtn_value As Doublen'n'    Dim s As Doublen'    Dim eval_date As Daten'n'    Dim h1 As Doublen'    Dim h2 As Doublen'n'    Dim vol_l As Doublen'    Dim vol_m As Doublen'    Dim vol_u As Doublen'n'    If eval_date_in > 0 Thenn'        eval_date = eval_date_inn'    Elsen'        eval_date = eval_date_n'    End Ifn'n'    h1 = mid_strike - lower_striken'    h2 = upper_strike - mid_striken'n'n'    If s_in > 0 Thenn'        s = s_inn'    Elsen'        s = s_n'    End Ifn'n'    vol_l = implied_vol(eval_date, s * lower_strike, maturity_date)n'    vol_m = implied_vol(eval_date, s * mid_strike, maturity_date)n'    vol_u = implied_vol(eval_date, s * upper_strike, maturity_date)n'n'    rtn_value = 2 / h1 / (h1 + h2) * vol_l + (-2 / h1 / (h1 + h2) - 2 / h2 / (h1 + h2)) * vol_m + 2 / h2 / (h1 + h2) * vol_un'    'rtn_value = (implied_vol(eval_date, s * lower_strike, maturity_date) + implied_vol(eval_date, s * upper_strike, maturity_date) - 2 * implied_vol(eval_date, s * mid_strike, maturity_date)) _n'              / (lower_strike - upper_strike)n'n'    get_smile = rtn_valuen'n'n'    Exit Functionn'n'ErrorHandler:n'n'    raise_err "clsSABRSurface.get_skew", Err.description & ":" & Me.underlying_asset & ":" & maturity_daten'n'End Functionnnnnnnn